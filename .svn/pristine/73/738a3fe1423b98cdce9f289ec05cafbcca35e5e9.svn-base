<template>
  <Modal v-model="show" :title="title" :closable="false" :mask-closable="false">
    <div class="page storageplaceedit">
      <Loading :loading="loading">
      <div class="page-form">
        <Form :model="formItem" ref="form" :label-width="100" :rules="ruleValidate" class="form-item">  
          <FormItem label="货位编号" prop="placeId">
            <Input v-model="formItem.placeId" placeholder="" :disabled="isEdit" class="width-1" />
          </FormItem>
          <FormItem label="名称" prop="name">
            <Input v-model="formItem.name" placeholder=""/>
          </FormItem>
          <FormItem label="描述" prop="description">
            <Input v-model="formItem.description" type="textarea" placeholder=""/>
          </FormItem>
          <FormItem>
            <Button type="primary" icon="checkmark" @click="save">保存</Button>
            <Button type="ghost" @click="reset" style="margin-left: 8px" >重置</Button>
            <Button type="ghost" @click="close" style="margin-left: 8px">取消</Button>
          </FormItem>
        </Form>
      </div>
      </Loading>
    </div>
    <div slot="footer"></div>
  </Modal>
</template>
<script>
  import Loading from '@/components/loading';

  export default {
    components: {
      Loading
    },
    data() {
      return {
        loading: 1,
        show: false,
        //是否编辑 0 添加 1 编辑
        isEdit: false,
        industry: [],
        //表单对象
        formItem: {
          storageId:'',
          placeId:'',
          name:'',
          parentPlaceId:'',
          description:'',
        },
        oriItem:{ 
        },
        //验证
        ruleValidate: {
          placeId: [
            {required: true, whitespace: true, message: '编码不能为空', trigger: 'blur'},
            {type: 'string', max: 50, message: '不能超过50个字', trigger: 'blur'}
          ],
          name: [
            {required: true, whitespace: true, message: '名称不能为空', trigger: 'blur'},
            {type: 'string', max: 50, message: '不能超过50个字', trigger: 'blur'}
          ],
        },
        options:{
          ok:(data)=>{},
          cancel:()=>{}
        }
      }
    },
    computed: {
      title() {
        if (this.isEdit) {
          return "货位 - 编辑";
        } else {
          return "货位 - 新增";
        }
      },
    },
    mounted(){
       
    },
    methods: {
      save() { 
        this.$refs['form'].validate((valid) => {
          if (valid) { 
            this.saveItem();
          } else {
            return;
          }
        });
      },
      saveItem() {
        let url = '';
        let msg = '';
        if (this.isEdit) {
          url = '/api/storage/place/update';
          msg = '修改成功';
        } else {
          url = '/api/storage/place/add';
          msg = '添加成功';
        }

        this.loading = 1;       
        this.$http.post(url, this.formItem).then((res) => {
          this.loading = 0;
          if (res.data.code === 0) {
            this.$Message.success(msg); 
            this.options.ok(this.formItem);
            this.close();
          } else { 
            this.$Message.error(res.data.message)
          }
        }).catch((error) => {
          this.loading = 0;
          this.$Message.error(error.message)
        });
      },
      open(options) { 
        this.options = 
        Object.assign({ 
          item:{},
          ok:(data)=>{},
          cancel:()=>{}
        },options);

          debugger;
        this.show = true; 
        this.$refs['form'].resetFields();

        var item = this.options.item;

        if (item.placeId && item.placeId !== '') {
          this.isEdit = true; 
          this.oriItem = item;
        } else {
          this.isEdit = false; 
          this.oriItem = Object.assign({
            storageId:'',
            placeId:'',
            name:'',
            parentPlaceId:'',
            description:''},item);
          if(this.oriItem.parentPlaceId == '-1'){
            this.oriItem.placeId = '';
          }else{
            this.oriItem.placeId = '';
          }
          this.oriItem.children = null; 
        }
        Object.assign(this.formItem,this.oriItem);
        this.loading = 0;
      },
      close() {
        this.show = false;
      },
      reset() {
        $.extend(this.formItem,this.oriItem);
      }
    }
  }

</script>

<style type="text/css">
  .form-sub-title {
    font-size: 14px;
    margin: 0 0 12px 18px;
    color: #2b85e4;
  }

  .storageplaceedit .width-1{
    width: 160px;
  }
</style>
